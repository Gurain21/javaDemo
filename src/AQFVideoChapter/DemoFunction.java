package AQFVideoChapter;
/*概念：实现特定功能的一段代码，可反复使用。
经验：在需要多个位置重复使用的一组代码，定义在方法内部
方法定义在类的内部，与main函数并列
一个方法只能有一个返回值
设置了返回值，当存在分支时，必须保证每一条分支最后都能返回值
在一个类中可以定义多个方法，方法之间属于并列关系，不可嵌套。
一个方法只做一件事
好处：
1、减少代码沉余
 2、提高复用性
3、提高可读性
4、提高可维护性
5、方便分工合作*/
/*
多级调用时：优先执行方法内部代码，结束后，返回到调用处，继续向下执行
当方法自己调用自己时，需要在方法内部设置一个出口。 如果没有出口，则会产生无穷递归*/
/*
什么时递归？
解决具有既定规律的问题时，在方法内部再次调用自身方法的一种编程方式。
何时使用递归？
当需要解决的问题可以拆分成若干个小问题，大小问题的解决方式相同，方法中自己调用自己。
当使用循环解决的常规问题时，都可以替换成递归解决
如何正确使用递归？
设置有效的出口条件，可以让调用链上的每个方法都可以正确返回，避免无穷递归。
 */
public class DemoFunction {
    public static void hello(){

    }
}
